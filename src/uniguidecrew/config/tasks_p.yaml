rank_courses_task:
  description: >
    Rank student's registration shortlist ({shortlist_cou}) using one of the following two methods only:\n
    Method number 1:\n
    If the student's credit hour limit {credits} satisfies the total credit hours of the registration semester {reg_sem_credit}, 
    then assign courses from the student's eligible course list {shortlist_cou} that in {reg_sem_courses} according to [Key Course: 7, Not a Key Course: 6]. You can use ({key_courses}) as a reference of key courses.\n
    For the other courses that not in the list assign he priority criteria based on the following criteria [Current semester not completed courses: 6 extremely high priority, Next Semester and key courses: 5 Very Very High Priority, Next Level and key courses: 4 Very High Priority, Next Semester courses: 3 High Priority, Key courses: 2 Medium Priority, Other courses: 1 Low Priority].\n  
    Method number 2:\n
    If the student's credit hour limit {credits} does not meet the total credit hours for registration semester {reg_sem_credit}, 
    rank all the student's eligible courses {shortlist_cou} based on university-defined priorities [Current semester not completed courses: 6 extremely high priority, Next Semester and key courses: 5 Very Very High Priority, Next Level and key courses: 4 Very High Priority, Next Semester courses: 3 High Priority, Key courses: 2 Medium Priority, Other courses: 1 Low Priority] only and don't assign with priority 6 even it's in the list. 
    Use the current semester ({curr_sem}) to reference the next semester ({next_sem}) and next level courses when assigning priority correctly. 
    This ensures that students register for the most crucial courses first, supporting their academic progression.
  expected_output: >
    A JSON file containing:",
    - A list of eligible courses with assigned priority scores.
    - A detailed explanation of the ranking methodology used.
  agent: courses_prioritizer


